<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<context:component-scan base-package="it.infocamere.cont2.reportv2.controller" />
	<context:component-scan base-package="it.infocamere.cont2.reportv2.commons.birt" />
	<context:component-scan
		base-package="it.infocamere.cont2.reportv2.quartz.jobs.print" />

	<!-- <bean id="configuration" class="it.infocamere.fpmi.common.configuration.ReloadableConfiguration"> -->
	<!-- <property name="location" value="classpath:/config/c2st-rev2.properties"/> -->
	<!-- </bean> -->


<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory assorbito in MvcConfiguration.class -->

<!--     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!-- 		<property name="prefix" value="/WEB-INF/views/"/> -->
<!-- 		<property name="suffix" value=".jsp"/> -->
<!-- 	</bean> -->


	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<property name="paramName" value="locale" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:i18n/messages" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="alwaysUseMessageFormat" value="true" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="IT" />
	</bean>


	<!-- Parte relativa al db con datasoruce Tomcat -->
<!-- 	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/contReportDS" />

	</bean>-->
	
	
		<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>
	
	<context:property-placeholder location="classpath:/config/jdbc.properties"/>
	




	<bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="packagesToScan" value="it.infocamere.cont2.reportv2.dao.entity" />
		<!-- Se si vuole la scansione classe per classe delle Entity -->
		<!-- <property name="annotatedClasses"> -->
		<!-- <list> -->
		<!-- <value>it.infocamere.cont2.reportv2.dao.entity.Ente</value> -->
		<!-- </list> -->
		<!-- </property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- Da rimuovere se si usa il transaction manager altrimenti non va 
					il getCurrentSession -->
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>


	<!-- Transaction manager per le transazioni db -->
	<!-- Delego le transazioni hibernate a spring. Altrimenti ogni volta dovrei 
		aprire una transaction e fare la commit -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>


	<bean id="dbManagerDao" class="it.infocamere.cont2.reportv2.dao.manager.DbManagerImpl">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>


<!-- 	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> -->
<!-- 		<property name="host" value="collabora.infocamere.it" /> -->
<!-- 		<property name="port" value="465" /> -->
<!-- 		<property name="username" value="yyi9246" /> -->
<!-- 		<property name="password" value="mt448032" /> -->

<!-- 		<property name="javaMailProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="mail.transport.protocol">smtps</prop> -->
<!-- 				<prop key="mail.smtp.from">marco.tozzato@infocamere.it</prop> -->
<!-- 				<prop key="mail.smtps.auth">true</prop> -->
<!-- 				<prop key="mail.smtp.starttls.enable">true</prop> -->
<!-- 				<prop key="mail.smtp.timeout">10000</prop> -->
<!-- 				<prop key="mail.smtp.connectiontimeout">10000</prop> -->
<!-- 				<prop key="mail.debug">true</prop> -->
<!-- 				<prop key="mail.smtp.socketFactory.port">465</prop> -->
<!-- 				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> -->
<!-- 				<prop key="mail.smtp.socketFactory.fallback">false</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->


</beans>